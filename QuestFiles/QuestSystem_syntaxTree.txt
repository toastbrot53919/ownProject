C:\Users\Toastbrot\Downloads\STRATEGY 01.04.2022\My project\Assets\Scripts\QuestFiles\QuestSystem.cs
(QuestSystem)

- public (visibility level) class (class keyword) QuestSystem (class name) : MonoBehaviour (inheritance from MonoBehaviour)
- {
    - public (visibility level) List<Quest> quests (variable declaration and initialization)
    - public UIManager uiManager (variable declaration)

    - public (visibility level) Quest GetQuestByID(int questID) (method declaration)
    - {
        - foreach (Quest quest in quests) (for each loop)
        - {
            - if (quest.id == questID) (if statement)
            - {
                - return quest; (return statement)
            - }
        - }
        - return null; (return statement)
    - }

    - private (visibility level) void Start() (method declaration)
    - {
        - quests = new List<Quest>(); (variable initialization)
    - }

    - public (visibility level) void AddQuest(Quest quest) (method declaration)
    - {
        - uiManager.updateQuestBook(); (method call)
        - quests.Add(quest); (list method call)
    - }

    - public (visibility level) void RemoveQuest(int questId) (method declaration)
    - {
        - Quest questToRemove = quests.Find(q => q.id == questId); (variable initialization)
        - if (questToRemove != null) (if statement)
        - {
            - quests.Remove(questToRemove); (list method call)
        - }
    - }

    - public (visibility level) void UpdateQuestObjective(string objectiveId) (method declaration)
    - {
        - uiManager.updateQuestBook(); (method call)
        - foreach (Quest quest in quests) (for each loop)
        - {
            - if (quest.status != QuestStatus.Completed) (if statement)
            - {
                - quest.CheckAndUpdateObjectives(objectiveId); (method call)
            - }
        - }
    - }
- }