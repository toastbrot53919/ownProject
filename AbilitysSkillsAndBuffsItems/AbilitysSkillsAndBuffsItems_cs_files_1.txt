public interface IStatsProvider { CharacterStats GetCharacterStats(); }
﻿using System.Collections.Generic; using UnityEngine; [CreateAssetMenu(fileName = "SkillTree", menuName = "SkillTree/SkillTree", order = 1)] public class SkillTree : ScriptableObject { public List<SkillNode> skillNodes; public SkillTree() { skillNodes = new List<SkillNode>(); } public void AddSkillNode(SkillNode skillNode) { skillNodes.Add(skillNode); } internal bool IsVisible(SkillNode skillNode) { return true; } private void Awake() { resetAllNodes(); } public void resetAllNodes() { foreach (SkillNode node in skillNodes) { node.isUnlocked = false; } } }
﻿[System.Serializable] public class StatsModifier { public float attackSpeed; public float criticalChance; public float criticalDamage; public float spellCriticalChance; public float spellCriticalDamage; public float cooldown; public float dodgeChance; public float armor; public float magicResistance; public float maxLife; public float maxMana; public float lifeRegen; public float manaRegen; public void Add(StatsModifier other) { attackSpeed += other.attackSpeed; criticalChance += other.criticalChance; criticalDamage += other.criticalDamage; spellCriticalChance += other.spellCriticalChance; spellCriticalDamage += other.spellCriticalDamage; cooldown += other.cooldown; dodgeChance += other.dodgeChance; armor += other.armor; magicResistance += other.magicResistance; maxLife += other.maxLife; maxMana += other.maxMana; lifeRegen += other.lifeRegen; manaRegen += other.manaRegen; } public void Sub(StatsModifier other) { attackSpeed -= other.attackSpeed; criticalChance -= other.criticalChance; criticalDamage -= other.criticalDamage; spellCriticalChance -= other.spellCriticalChance; spellCriticalDamage -= other.spellCriticalDamage; cooldown -= other.cooldown; dodgeChance -= other.dodgeChance; armor -= other.armor; magicResistance -= other.magicResistance; maxLife -= other.maxLife; maxMana -= other.maxMana; lifeRegen -= other.lifeRegen; manaRegen -= other.manaRegen; } }
