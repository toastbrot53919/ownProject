C:\Users\Toastbrot\Downloads\STRATEGY 01.04.2022\My project\Assets\Scripts\AbilitysSkillsAndBuffsItems\Skills\FrostBoltMastery.cs
FrostBoltMastery.cs:

[CreateAssetMenu(fileName = "FrostBoltMastery", menuName = "Skill/FrostBoltMastery", order = 1)]
public class FrostBoltMastery : Skill
{
    [SerializeField]
    private Buff frozenBuff;

    public void OnEnable()
    {
        skillName = "FrostBoltMastery";
        frozenBuff = BuffFactory.CreateBuff("Frozen", 5f, true, 3, new StatsModifier());
        frozenBuff.AddInvokeOnApply(OnApplyFrozen);
    }

    public void OnApplyFrozen(BuffInstance instance, GameObject target)
    {
        Debug.Log("OnApplyFrozen" + skillName);
        IStunnable stunnable = target.GetComponent<IStunnable>();
        if (stunnable != null)
        {
            stunnable.Stun(10f);
        }
    }

    public override void ApplySkill(CharacterStats playerStats)
    {
        base.ApplySkill(playerStats);
        playerStats.GetComponent<BuffSystem>().AddEventForBuff("Chill", "OnApply", OnApplyCheckForChillStacks);
    }

    public override void RemoveSkill(CharacterStats playerStats)
    {
        base.RemoveSkill(playerStats);
        playerStats.GetComponent<BuffSystem>().RemoveEventForBuff("Chill", "OnApply", OnApplyCheckForChillStacks);
    }

    public void OnApplyCheckForChillStacks(BuffInstance instance, GameObject target)
    {
        Debug.Log("OnApplyCheckForChillStacks");

        if (instance.buff.buffName == "Chill")
        {
            if (instance.currentStacks >= instance.buff.maxStacks)
            {
                Debug.Log("OnApplyCheckForChillStacks" + "Triggerd");
                instance.currentStacks = 0;
                instance.target.GetComponent<BuffSystem>().RemoveBuff(instance.buff, instance.buffSystemCaster);
                instance.target.GetComponent<BuffSystem>().AddBuff(frozenBuff, instance.target, instance.buffSystemCaster);
            }
        }
    }
}

Syntax tree:

1. FrostBoltMastery: Skill
   - frozenBuff: Buff
   - OnEnable(): void
       - skillName = "FrostBoltMastery"
       - frozenBuff = BuffFactory.CreateBuff("Frozen", 5f, true, 3, new StatsModifier())
       - frozenBuff.AddInvokeOnApply(OnApplyFrozen)
   - OnApplyFrozen(instance: BuffInstance, target: GameObject): void
       - Debug.Log("OnApplyFrozen" + skillName)
       - stunnable = target.GetComponent<IStunnable>()
       - if (stunnable != null)
           - stunnable.Stun(10f)
   - ApplySkill(playerStats: CharacterStats): void
       - base.ApplySkill(playerStats)
       - playerStats.GetComponent<BuffSystem>().AddEventForBuff("Chill", "OnApply", OnApplyCheckForChillStacks)
   - RemoveSkill(playerStats: CharacterStats): void
       - base.RemoveSkill(playerStats)
       - playerStats.GetComponent<BuffSystem>().RemoveEventForBuff("Chill", "OnApply", OnApplyCheckForChillStacks)
   - OnApplyCheckForChillStacks(instance: BuffInstance, target: GameObject): void
       - Debug.Log("OnApplyCheckForChillStacks")
       - if (instance.buff.buffName == "Chill")
           - if (instance.currentStacks >= instance.buff.maxStacks)
               - Debug.Log("OnApplyCheckForChillStacks" + "Triggerd")
               - instance.currentStacks = 0
               - instance.target.GetComponent<BuffSystem>().RemoveBuff(instance.buff, instance.buffSystemCaster)
               - instance.target.GetComponent<BuffSystem>().AddBuff(frozenBuff, instance.target, instance.buffSystemCaster)