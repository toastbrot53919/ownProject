C:\Users\Toastbrot\Downloads\STRATEGY 01.04.2022\My project\Assets\Scripts\PlayerAndUnitsComponent\AIController.cs
Class Name: AIController

- currentState: AIState
- idleState: IdleState
- followState: FollowState
- assistState: AssistState
- patrolState: PatrolState
- navMeshAgent: NavMeshAgent
- chaseState: ChaseState
- attackState: AttackState
- target: Transform
- aggroRadius: float
- aggroTag: string
- attackInterval: float
- attackAbility: Ability
- attackRange: float
- animator: Animator

+ Start()
    - navMeshAgent = GetComponent<NavMeshAgent>()
    - currentState = idleState
    - patrolStateMonoBehaviour = GetComponent<PatrolStateMonoBehaviour>()
    + if (patrolStateMonoBehaviour != null)
        - patrolState.waypoints = new List<Transform>()
        + foreach (GameObject g in patrolStateMonoBehaviour.waypoints)
            - patrolState.waypoints.Add(g.transform)
    - animator = GetComponent<Animator>()

+ NavMeshAgent getNavMeshAgent()
    - return navMeshAgent

+ Update()
    + if (navMeshAgent == null || animator == null)
        - return
    - currentState.UpdateState(this)
    + if (navMeshAgent.velocity.magnitude > 0)
        - animator.SetFloat("Speed", 1)
    + else
        - animator.SetFloat("Speed", 0)

+ ChangeState(newState: AIState)
    - currentState.ExitState(this)
    - currentState = newState
    - newState.EnterState(this)

+ checkForAggro()
    - colliders = Physics.OverlapSphere(transform.position, aggroRadius)
    + foreach (Collider collider in colliders)
        + if (!string.IsNullOrEmpty(collider.tag) && collider.CompareTag("Player"))
            - target = collider.gameObject.transform
            + ChangeState(chaseState)
            + break

+ attack()
    + if (target != null)
        - distanceToTarget = Vector3.Distance(transform.position, target.position)
        + if (distanceToTarget <= attackRange)
            - navMeshAgent.isStopped = true
            - GetComponent<Animator>().SetFloat("Speed", 0)
            + GetComponent<CharacterCombatController>().PerformAbility(attackAbility, target.gameObject)
        + else
            + ChangeState(chaseState)

+ SetAIController(aiController: AIController)
    - currentState = aiController.currentState
    - idleState = aiController.idleState
    - followState = aiController.followState
    - assistState = aiController.assistState
    - patrolState = aiController.patrolState
    - chaseState = aiController.chaseState
    - attackState = aiController.attackState
    - target = aiController.target
    - aggroRadius = aiController.aggroRadius
    - aggroTag = aiController.aggroTag
    - attackInterval = aiController.attackInterval
    - attackAbility = aiController.attackAbility
    - attackRange = aiController.attackRange

Class Name: AIState (abstract)

- EnterState(aiController: AIController)
- UpdateState(aiController: AIController)
- ExitState(aiController: AIController)