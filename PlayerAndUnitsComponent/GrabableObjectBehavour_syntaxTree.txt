C:\Users\Toastbrot\Downloads\STRATEGY 01.04.2022\My project\Assets\Scripts\PlayerAndUnitsComponent\GrabableObjectBehavour.cs
Class: GrabableObjectBehavour

Syntax Tree:
- Public Class GrabableObjectBehavour : MonoBehaviour, IIsGrabable, IInteractable
  - Public bool IsGrabbed { get; set; }
  - Public Transform Grabber { get; set; }
  - Public void Grab(Transform grabber)
    - IsGrabbed = true;
    - Grabber = grabber;
    - Transform.SetParent(grabber.GetComponent<CanGrabController>().grabHoldPoint);
    - Transform.localPosition = Vector3.zero;
    - Transform.localRotation = Quaternion.identity;
  - Public void Release()
    - IsGrabbed = false;
    - Grabber = null;
    - Transform.SetParent(null);
  - Public void Interact(Transform interacter)
    - If (IsGrabbed)
      - Release();
    - else
      - Grab(interacter);

Explanation of the Syntax Tree:

The class GrabableObjectBehavour is defined as a public class and is inherited from two interfaces - IIsGrabable and IInteractable. 

Two properties are defined here â€“ IsGrabbed as a boolean to check whether the object is grabbed or not, and Grabber as a Transform to store the reference of the object that grabbed it. 

The first public method defined inside the class is Grab() which is used to assign the grabber and transform the object to the grabber's position and orientation. Inside this method, first the value of IsGrabbed is set to true, then the Grabber is set to the reference of the grabber passed as an argument. The parent of the object is set to the grabber's grabHoldPoint, and its position and rotation are set to zero and identity respectively. 

The second public method defined inside the class is Release(), which simply resets the values of IsGrabbed and Grabber, and sets the parent of the object to null  when called.

The third method, Interact(), is used to check whether the object is grabbed or not by passing the interacter as an argument. If the object is grabbed, Release() is called, and if it is not grabbed, Grab() is called with the interacter as the grabber argument.