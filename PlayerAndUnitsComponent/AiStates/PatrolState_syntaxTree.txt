C:\Users\Toastbrot\Downloads\STRATEGY 01.04.2022\My project\Assets\Scripts\PlayerAndUnitsComponent\AiStates\PatrolState.cs
PatrolState.cs:

- Class definition:

```
public class PatrolState : AIState
```

- Inherits from:

```
AIState
```

- Creates asset menu:

```
[CreateAssetMenu(menuName = "AI/States/PatrolState")]
```

- Public variables:

```
public List<Transform> waypoints;
public float patrolSpeed = 3f;
public float waitTime = 3f;
```

- Private variables:

```
private int currentWaypoint;
private float waitEndTime;
```

- Method to enter the state:

```
public override void EnterState(AIController aiController)
{
    aiController.GetComponent<UnityEngine.AI.NavMeshAgent>().speed = patrolSpeed;
    currentWaypoint = 0;
}
```

- Method to update the state:

```
public override void UpdateState(AIController aiController)
{   
    aiController.checkForAggro();

    UnityEngine.AI.NavMeshAgent agent = aiController.GetComponent<UnityEngine.AI.NavMeshAgent>();

    if (waypoints.Count > 0)
    {
        if (!agent.pathPending && agent.remainingDistance < 0.5f)
        {
            if (Time.time > waitEndTime)
            {
                currentWaypoint = (currentWaypoint + 1) % waypoints.Count;
                agent.SetDestination(waypoints[currentWaypoint].position);
                waitEndTime = Time.time + waitTime;
            }
        }
    }
}
```

- Method to exit the state:

```
public override void ExitState(AIController aiController)
{
    // Clean up or reset any variables if needed
}
```